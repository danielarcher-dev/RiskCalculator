class InitialBalances():
    def __init__(self, dataframe):
        self.AccruedInterest = dataframe['accruedInterest']
        self.AvailableFundsNonMarginableTrade = dataframe['availableFundsNonMarginableTrade']
        self.BondValue = dataframe['bondValue']
        self.BuyingPower = dataframe['buyingPower']
        self.CashBalance = dataframe['cashBalance']
        self.CashAvailableForTrading = dataframe['cashAvailableForTrading']
        self.CashReceipts = dataframe['cashReceipts']
        self.DayTradingBuyingPower = dataframe['dayTradingBuyingPower']
        self.DayTradingBuyingPowerCall = dataframe['dayTradingBuyingPowerCall']
        self.DayTradingEquityCall = dataframe['dayTradingEquityCall']
        self.Equity = dataframe['equity']
        self.EquityPercentage = dataframe['equityPercentage']
        self.LiquidationValue = dataframe['liquidationValue']
        self.LongMarginValue = dataframe['longMarginValue']
        self.LongOptionMarketValue = dataframe['longOptionMarketValue']
        self.LongStockValue = dataframe['longStockValue']
        self.MaintenanceCall = dataframe['maintenanceCall']
        self.MaintenanceRequirement = dataframe['maintenanceRequirement']
        self.Margin = dataframe['margin']
        self.MarginEquity = dataframe['marginEquity']
        self.MoneyMarketFund = dataframe['moneyMarketFund']
        self.MutualFundValue = dataframe['mutualFundValue']
        self.RegTCall = dataframe['regTCall']
        self.ShortMarginValue = dataframe['shortMarginValue']
        self.ShortOptionMarketValue = dataframe['shortOptionMarketValue']
        self.ShortStockValue = dataframe['shortStockValue']
        self.TotalCash = dataframe['totalCash']
        self.IsInCall = dataframe['isInCall']
        self.PendingDeposits = dataframe['pendingDeposits']
        self.MarginBalance = dataframe['marginBalance']
        self.ShortBalance = dataframe['shortBalance']
        self.AccountValue = dataframe['accountValue']